# Generated by Django 3.2.19 on 2023-07-13 22:08

from django.db import migrations, models
from django.utils.translation import gettext as _


class Migration(migrations.Migration):

    initial = True
    dependencies = [
        ("quartz", "0001_initial"),
    ]

    def add_widgets(apps, schema_editor):
        Widget = apps.get_model("models", "Widget")

        Widget.objects.update_or_create(
            widgetid="bcae8e90-09f7-4ae3-906b-7c7bb71a6ddf",
            name="bngpoint",
            component="views/components/widgets/bngpoint",
            defaultconfig={
                "placeholder": "Enter the centre point map reference of the resource."
            },
            helptext=None,
            datatype="bngcentrepoint"
        )

        Widget.objects.update_or_create(
            widgetid="31bc729d-6126-4301-8ec1-d6c4d98c68f8",
            name="photo-widget",
            datatype="file-list",
            component="views/components/widgets/photo",
            helptext=None,
            defaultconfig={
                "maxFilesize": "200",
                "acceptedFiles": "",
                "rerender": True
            }
        )
    
    def remove_widgets(apps, schema_editor):
        Widget = apps.get_model("models", "Widget")

        for widget in Widget.objects.filter(pk__in=[
            "bcae8e90-09f7-4ae3-906b-7c7bb71a6ddf",
            "31bc729d-6126-4301-8ec1-d6c4d98c68f8",
        ]):
            widget.delete()


    def add_datatypes(apps, schema_editor):
        Datatype = apps.get_model("models", "DDataType")
        Widget = apps.get_model("models", "Widget")

        bngpoint=Widget.objects.get(pk="bcae8e90-09f7-4ae3-906b-7c7bb71a6ddf")

        Datatype.objects.update_or_create(
            datatype="bngcentrepoint",
            iconclass="fa fa-location-arrow",
            modulename="bngcentrepoint.py",
            classname="BNGCentreDataType",
            defaultwidget=bngpoint,
            defaultconfig=None,
            configcomponent="views/components/datatypes/bngcentrepoint",
            configname="bngcentrepoint-datatype-config",
            isgeometric=False,
            issearchable=True,
        )

    def remove_datatypes(apps, schema_editor):
        Datatype = apps.get_model("models", "DDataType")

        for datatype in Datatype.objects.filter(datatype__in=[
            "bngcentrepoint",
        ]):
            datatype.delete()

    operations = [
        migrations.RunPython(add_widgets, remove_widgets),
        migrations.RunPython(add_datatypes, remove_datatypes),
    ]
